"""empty message

Revision ID: e3a33ce40421
Revises: 543569391695
Create Date: 2024-09-17 13:07:21.842952

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e3a33ce40421'
down_revision = '543569391695'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=120), nullable=False),
    sa.Column('firstname', sa.String(length=120), nullable=False),
    sa.Column('lastname', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('vehicles_class', sa.String(length=120), nullable=True),
    sa.Column('manufacturer', sa.String(length=120), nullable=True),
    sa.Column('autonomy', sa.String(length=120), nullable=True),
    sa.Column('weapons', sa.String(length=120), nullable=True),
    sa.Column('passengers', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('favorite__planet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('planet_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite__vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite__character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('films')
    op.drop_table('films_characters')
    op.drop_table('films_species')
    op.drop_table('starships')
    op.drop_table('films_planets')
    op.drop_table('films_starships')
    op.drop_table('user')
    op.drop_table('species')
    op.drop_table('liked')
    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('specie', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('role', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('life_status', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('homeworld_id', sa.Integer(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_foreign_key(None, 'planets', ['homeworld_id'], ['id'])
        batch_op.drop_column('eye_color')
        batch_op.drop_column('height')
        batch_op.drop_column('birth_year')
        batch_op.drop_column('skin_color')
        batch_op.drop_column('homeworld')
        batch_op.drop_column('force_side')
        batch_op.drop_column('mass')
        batch_op.drop_column('hair_color')

    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('galactic_location', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('native_species', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('government', sa.String(length=120), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('climate',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('population',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.drop_column('orbital_period')
        batch_op.drop_column('diameter')
        batch_op.drop_column('terrain')
        batch_op.drop_column('rotation_period')
        batch_op.drop_column('gravity')
        batch_op.drop_column('surface_water')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('surface_water', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gravity', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('rotation_period', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('terrain', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('diameter', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('orbital_period', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('population',
               existing_type=sa.String(length=120),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('climate',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=250),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
        batch_op.drop_column('government')
        batch_op.drop_column('native_species')
        batch_op.drop_column('galactic_location')

    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hair_color', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('mass', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('force_side', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('homeworld', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('skin_color', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('birth_year', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('height', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('eye_color', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('gender',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=250),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
        batch_op.drop_column('homeworld_id')
        batch_op.drop_column('life_status')
        batch_op.drop_column('role')
        batch_op.drop_column('specie')

    op.create_table('liked',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('item_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('character_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('planet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('starship_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('species_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name='liked_character_id_fkey'),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], name='liked_planet_id_fkey'),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], name='liked_species_id_fkey'),
    sa.ForeignKeyConstraint(['starship_id'], ['starships.id'], name='liked_starship_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='liked_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'item_id', name='liked_pkey')
    )
    op.create_table('species',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('species_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('classification', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('designation', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('average_height', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('average_lifespan', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hair_colors', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('skin_colors', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('eye_colors', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('homeworld', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='species_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('nick_name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('nick_name', name='user_nick_name_key')
    )
    op.create_table('films_starships',
    sa.Column('film_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('starship_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['film_id'], ['films.id'], name='films_starships_film_id_fkey'),
    sa.ForeignKeyConstraint(['starship_id'], ['starships.id'], name='films_starships_starship_id_fkey'),
    sa.PrimaryKeyConstraint('film_id', 'starship_id', name='films_starships_pkey')
    )
    op.create_table('films_planets',
    sa.Column('film_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('planet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['film_id'], ['films.id'], name='films_planets_film_id_fkey'),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], name='films_planets_planet_id_fkey'),
    sa.PrimaryKeyConstraint('film_id', 'planet_id', name='films_planets_pkey')
    )
    op.create_table('starships',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('starship_class', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('manufacturer', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cost_in_credits', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('length', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('crew', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('passengers', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('max_atmosphering_speed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hyperdrive_rating', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MGLT', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cargo_capacity', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('consumables', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pilots', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='starships_pkey')
    )
    op.create_table('films_species',
    sa.Column('film_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('species_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['film_id'], ['films.id'], name='films_species_film_id_fkey'),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], name='films_species_species_id_fkey'),
    sa.PrimaryKeyConstraint('film_id', 'species_id', name='films_species_pkey')
    )
    op.create_table('films_characters',
    sa.Column('film_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('character_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name='films_characters_character_id_fkey'),
    sa.ForeignKeyConstraint(['film_id'], ['films.id'], name='films_characters_film_id_fkey'),
    sa.PrimaryKeyConstraint('film_id', 'character_id', name='films_characters_pkey')
    )
    op.create_table('films',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('episode_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('release_date', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('director', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='films_pkey')
    )
    op.drop_table('favorite__character')
    op.drop_table('favorite__vehicle')
    op.drop_table('favorite__planet')
    op.drop_table('vehicles')
    op.drop_table('users')
    # ### end Alembic commands ###
